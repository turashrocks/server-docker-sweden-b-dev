version: '3.5'

x-services-volume:
  &laravelup2-volume
  type: bind
  source: ./laravelup2
  target: /laravelup2
 
services:
    # mysql5.7.22
    mydbup2:
        # image name
        image: mysql:5.7.22
        # Password and user name of mysql
        environment:
           MYSQL_DATABASE:  tmss_ict_dev
           MYSQL_ROOT_PASSWORD: root
           MYSQL_PASSWORD: root
           MYSQL_USER: root
           MYSQL_ALLOW_EMPTY_PASSWORD: 'YES'
        # Which port should be exposed
        ports:
            - 3306:3306
        container_name: mydbup2
        volumes:
            # Save the data in named "Volumes" of Docker
            - db-store:/var/lib/mysql
            # Or use the local file
            # - ./docker_db_data/mysql:/var/lib/mysql
            # Where to save the mysql's log
            - ./logs:/var/log/mysql:z
            # Where to load the my.cnf
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:z
        # Which network this container belongs to.
        networks:
            - app_net
    # The container of laravelup2
    laravelup2:
        build:
            # Wnere to find the "Dockerfile".
            context: .
            dockerfile: docker/laravelup2/Dockerfile
        working_dir: /laravelup2
        volumes:
            # Where the source code should be saved.
            - <<: *laravelup2-volume
            # Where the bash file is (which is executed for the build)
            - ./docker/laravelup2/laravelup2_build.sh:/laravelup2_build.sh:z
            # Where to save laravelup2's log files
            - ./logs:/var/log/php
            # Where to load php.ini.
            - ./docker/laravelup2/php.ini:/usr/local/etc/php/php.ini
        # Wait until mydbup2 container is ready.
        depends_on:
            - mydbup2
        container_name: laravelup2
        # Which network this container belongs to.
        networks:
            - app_net
    # nginxup 1.17
    nginxup2:
        # image name
        image: nginx:1.17-alpine
        # Wait until "laravelup2" container is ready
        depends_on:
        - laravelup2
        # Which port should be exposed
        ports:
        - 8080:80
        volumes:
        # Where to find the files to serve
        - *laravelup2-volume
        # Where to save nginx logs.
        - ./logs:/var/log/nginx
        # Where to load default.conf.
        - ./docker/nginx2/default.conf:/etc/nginx/conf.d/default.conf
        container_name: nginxup2
        # Which network this container belongs to.
        networks:
            - app_net
    #phpmyadminup2        
    phpmyadminup2:
        image: phpmyadmin
        depends_on:
        - nginxup2
        ports:
            - "7000:80"
        links:
            - mydbup2:mydbup2
        environment:
            PMA_HOST: mydbup2
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: root
        container_name: phpmyadminup2
        networks:
            - app_net
            
networks:
    # Containers in same network can access each other by using its container name as host name
    app_net:
        driver: "bridge"
volumes:
    db-store:
